/**
 * generated by Xtext 2.9.1
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.InboundEndpointDef;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.OutboundEndpointDef;
import org.xtext.example.mydsl.myDsl.ParticipantStatement;
import org.xtext.example.mydsl.myDsl.ParticipantType;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Participant Statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ParticipantStatementImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ParticipantStatementImpl#getParticipantType <em>Participant Type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ParticipantStatementImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ParticipantStatementImpl#getOutbounds <em>Outbounds</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ParticipantStatementImpl#getInbounds <em>Inbounds</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ParticipantStatementImpl extends MinimalEObjectImpl.Container implements ParticipantStatement
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getParticipantType() <em>Participant Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParticipantType()
   * @generated
   * @ordered
   */
  protected static final ParticipantType PARTICIPANT_TYPE_EDEFAULT = ParticipantType.INTEGRATIONFLOW;

  /**
   * The cached value of the '{@link #getParticipantType() <em>Participant Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParticipantType()
   * @generated
   * @ordered
   */
  protected ParticipantType participantType = PARTICIPANT_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected static final String DESCRIPTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected String description = DESCRIPTION_EDEFAULT;

  /**
   * The cached value of the '{@link #getOutbounds() <em>Outbounds</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOutbounds()
   * @generated
   * @ordered
   */
  protected OutboundEndpointDef outbounds;

  /**
   * The cached value of the '{@link #getInbounds() <em>Inbounds</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInbounds()
   * @generated
   * @ordered
   */
  protected InboundEndpointDef inbounds;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ParticipantStatementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.PARTICIPANT_STATEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PARTICIPANT_STATEMENT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ParticipantType getParticipantType()
  {
    return participantType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setParticipantType(ParticipantType newParticipantType)
  {
    ParticipantType oldParticipantType = participantType;
    participantType = newParticipantType == null ? PARTICIPANT_TYPE_EDEFAULT : newParticipantType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PARTICIPANT_STATEMENT__PARTICIPANT_TYPE, oldParticipantType, participantType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDescription(String newDescription)
  {
    String oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PARTICIPANT_STATEMENT__DESCRIPTION, oldDescription, description));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OutboundEndpointDef getOutbounds()
  {
    return outbounds;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOutbounds(OutboundEndpointDef newOutbounds, NotificationChain msgs)
  {
    OutboundEndpointDef oldOutbounds = outbounds;
    outbounds = newOutbounds;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.PARTICIPANT_STATEMENT__OUTBOUNDS, oldOutbounds, newOutbounds);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOutbounds(OutboundEndpointDef newOutbounds)
  {
    if (newOutbounds != outbounds)
    {
      NotificationChain msgs = null;
      if (outbounds != null)
        msgs = ((InternalEObject)outbounds).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PARTICIPANT_STATEMENT__OUTBOUNDS, null, msgs);
      if (newOutbounds != null)
        msgs = ((InternalEObject)newOutbounds).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PARTICIPANT_STATEMENT__OUTBOUNDS, null, msgs);
      msgs = basicSetOutbounds(newOutbounds, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PARTICIPANT_STATEMENT__OUTBOUNDS, newOutbounds, newOutbounds));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public InboundEndpointDef getInbounds()
  {
    return inbounds;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetInbounds(InboundEndpointDef newInbounds, NotificationChain msgs)
  {
    InboundEndpointDef oldInbounds = inbounds;
    inbounds = newInbounds;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.PARTICIPANT_STATEMENT__INBOUNDS, oldInbounds, newInbounds);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInbounds(InboundEndpointDef newInbounds)
  {
    if (newInbounds != inbounds)
    {
      NotificationChain msgs = null;
      if (inbounds != null)
        msgs = ((InternalEObject)inbounds).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PARTICIPANT_STATEMENT__INBOUNDS, null, msgs);
      if (newInbounds != null)
        msgs = ((InternalEObject)newInbounds).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PARTICIPANT_STATEMENT__INBOUNDS, null, msgs);
      msgs = basicSetInbounds(newInbounds, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PARTICIPANT_STATEMENT__INBOUNDS, newInbounds, newInbounds));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.PARTICIPANT_STATEMENT__OUTBOUNDS:
        return basicSetOutbounds(null, msgs);
      case MyDslPackage.PARTICIPANT_STATEMENT__INBOUNDS:
        return basicSetInbounds(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.PARTICIPANT_STATEMENT__NAME:
        return getName();
      case MyDslPackage.PARTICIPANT_STATEMENT__PARTICIPANT_TYPE:
        return getParticipantType();
      case MyDslPackage.PARTICIPANT_STATEMENT__DESCRIPTION:
        return getDescription();
      case MyDslPackage.PARTICIPANT_STATEMENT__OUTBOUNDS:
        return getOutbounds();
      case MyDslPackage.PARTICIPANT_STATEMENT__INBOUNDS:
        return getInbounds();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.PARTICIPANT_STATEMENT__NAME:
        setName((String)newValue);
        return;
      case MyDslPackage.PARTICIPANT_STATEMENT__PARTICIPANT_TYPE:
        setParticipantType((ParticipantType)newValue);
        return;
      case MyDslPackage.PARTICIPANT_STATEMENT__DESCRIPTION:
        setDescription((String)newValue);
        return;
      case MyDslPackage.PARTICIPANT_STATEMENT__OUTBOUNDS:
        setOutbounds((OutboundEndpointDef)newValue);
        return;
      case MyDslPackage.PARTICIPANT_STATEMENT__INBOUNDS:
        setInbounds((InboundEndpointDef)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.PARTICIPANT_STATEMENT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MyDslPackage.PARTICIPANT_STATEMENT__PARTICIPANT_TYPE:
        setParticipantType(PARTICIPANT_TYPE_EDEFAULT);
        return;
      case MyDslPackage.PARTICIPANT_STATEMENT__DESCRIPTION:
        setDescription(DESCRIPTION_EDEFAULT);
        return;
      case MyDslPackage.PARTICIPANT_STATEMENT__OUTBOUNDS:
        setOutbounds((OutboundEndpointDef)null);
        return;
      case MyDslPackage.PARTICIPANT_STATEMENT__INBOUNDS:
        setInbounds((InboundEndpointDef)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.PARTICIPANT_STATEMENT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MyDslPackage.PARTICIPANT_STATEMENT__PARTICIPANT_TYPE:
        return participantType != PARTICIPANT_TYPE_EDEFAULT;
      case MyDslPackage.PARTICIPANT_STATEMENT__DESCRIPTION:
        return DESCRIPTION_EDEFAULT == null ? description != null : !DESCRIPTION_EDEFAULT.equals(description);
      case MyDslPackage.PARTICIPANT_STATEMENT__OUTBOUNDS:
        return outbounds != null;
      case MyDslPackage.PARTICIPANT_STATEMENT__INBOUNDS:
        return inbounds != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", participantType: ");
    result.append(participantType);
    result.append(", description: ");
    result.append(description);
    result.append(')');
    return result.toString();
  }

} //ParticipantStatementImpl
