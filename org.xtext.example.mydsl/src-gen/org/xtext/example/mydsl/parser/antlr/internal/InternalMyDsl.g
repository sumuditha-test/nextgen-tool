/*
 * generated by Xtext 2.9.1
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{ 
			  getUnorderedGroupHelper().enter(grammarAccess.getModelAccess().getUnorderedGroup());
			}
			(
				(
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 0);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getModelAccess().getParticipantsParticipantStatementParserRuleCall_0_0());
								}
								lv_participants_1_0=ruleParticipantStatement
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getModelRule());
									}
									add(
										$current,
										"participants",
										lv_participants_1_0,
										"org.xtext.example.mydsl.MyDsl.ParticipantStatement");
									afterParserOrEnumRuleCall();
								}
							)
							))+
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 1);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_1_0());
								}
								lv_statements_2_0=ruleStatement
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getModelRule());
									}
									add(
										$current,
										"statements",
										lv_statements_2_0,
										"org.xtext.example.mydsl.MyDsl.Statement");
									afterParserOrEnumRuleCall();
								}
							)
							))+
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup());
				}
			)
		)
				)*
			)
		)
			{ 
			  getUnorderedGroupHelper().leave(grammarAccess.getModelAccess().getUnorderedGroup());
			}
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStatementAccess().getMediatorStatementParserRuleCall_0());
		}
		this_MediatorStatement_0=ruleMediatorStatement
		{
			$current = $this_MediatorStatement_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getRoutingStatementParserRuleCall_1());
		}
		this_RoutingStatement_1=ruleRoutingStatement
		{
			$current = $this_RoutingStatement_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getParallelStatementParserRuleCall_2());
		}
		this_ParallelStatement_2=ruleParallelStatement
		{
			$current = $this_ParallelStatement_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_3());
		}
		this_IfStatement_3=ruleIfStatement
		{
			$current = $this_IfStatement_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getLoopStatementParserRuleCall_4());
		}
		this_LoopStatement_4=ruleLoopStatement
		{
			$current = $this_LoopStatement_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getGroupStatementParserRuleCall_5());
		}
		this_GroupStatement_5=ruleGroupStatement
		{
			$current = $this_GroupStatement_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getRefStatementParserRuleCall_6());
		}
		this_RefStatement_6=ruleRefStatement
		{
			$current = $this_RefStatement_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMediatorStatement
entryRuleMediatorStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMediatorStatementRule()); }
	iv_ruleMediatorStatement=ruleMediatorStatement
	{ $current=$iv_ruleMediatorStatement.current; }
	EOF;

// Rule MediatorStatement
ruleMediatorStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMediatorStatementAccess().getMediatorStatementMediatorTypeEnumRuleCall_0_0());
				}
				lv_mediatorStatement_0_0=ruleMediatorType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMediatorStatementRule());
					}
					set(
						$current,
						"mediatorStatement",
						lv_mediatorStatement_0_0,
						"org.xtext.example.mydsl.MyDsl.MediatorType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getMediatorStatementAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_config_2_0=RULE_STRING
				{
					newLeafNode(lv_config_2_0, grammarAccess.getMediatorStatementAccess().getConfigSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMediatorStatementRule());
					}
					setWithLastConsumed(
						$current,
						"config",
						lv_config_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getMediatorStatementAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleRoutingStatement
entryRuleRoutingStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoutingStatementRule()); }
	iv_ruleRoutingStatement=ruleRoutingStatement
	{ $current=$iv_ruleRoutingStatement.current; }
	EOF;

// Rule RoutingStatement
ruleRoutingStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_source_0_0=RULE_ID
				{
					newLeafNode(lv_source_0_0, grammarAccess.getRoutingStatementAccess().getSourceIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRoutingStatementRule());
					}
					setWithLastConsumed(
						$current,
						"source",
						lv_source_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='->'
		{
			newLeafNode(otherlv_1, grammarAccess.getRoutingStatementAccess().getHyphenMinusGreaterThanSignKeyword_1());
		}
		(
			(
				lv_target_2_0=RULE_ID
				{
					newLeafNode(lv_target_2_0, grammarAccess.getRoutingStatementAccess().getTargetIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRoutingStatementRule());
					}
					setWithLastConsumed(
						$current,
						"target",
						lv_target_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getRoutingStatementAccess().getColonKeyword_3());
		}
		(
			(
				lv_action_4_0=RULE_STRING
				{
					newLeafNode(lv_action_4_0, grammarAccess.getRoutingStatementAccess().getActionSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRoutingStatementRule());
					}
					setWithLastConsumed(
						$current,
						"action",
						lv_action_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleParallelStatement
entryRuleParallelStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParallelStatementRule()); }
	iv_ruleParallelStatement=ruleParallelStatement
	{ $current=$iv_ruleParallelStatement.current; }
	EOF;

// Rule ParallelStatement
ruleParallelStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='par'
		{
			newLeafNode(otherlv_0, grammarAccess.getParallelStatementAccess().getParKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParallelStatementAccess().getParstatementsStatementParserRuleCall_1_0());
				}
				lv_parstatements_1_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParallelStatementRule());
					}
					add(
						$current,
						"parstatements",
						lv_parstatements_1_0,
						"org.xtext.example.mydsl.MyDsl.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_2='else'
			{
				newLeafNode(otherlv_2, grammarAccess.getParallelStatementAccess().getElseKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParallelStatementAccess().getElsestatementsStatementParserRuleCall_2_1_0());
					}
					lv_elsestatements_3_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParallelStatementRule());
						}
						add(
							$current,
							"elsestatements",
							lv_elsestatements_3_0,
							"org.xtext.example.mydsl.MyDsl.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)*
		otherlv_4='end'
		{
			newLeafNode(otherlv_4, grammarAccess.getParallelStatementAccess().getEndKeyword_3());
		}
	)
;

// Entry rule entryRuleIfStatement
entryRuleIfStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfStatementRule()); }
	iv_ruleIfStatement=ruleIfStatement
	{ $current=$iv_ruleIfStatement.current; }
	EOF;

// Rule IfStatement
ruleIfStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='alt'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfStatementAccess().getAltKeyword_0());
		}
		otherlv_1='condition'
		{
			newLeafNode(otherlv_1, grammarAccess.getIfStatementAccess().getConditionKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_2());
		}
		otherlv_3='source'
		{
			newLeafNode(otherlv_3, grammarAccess.getIfStatementAccess().getSourceKeyword_3());
		}
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				lv_routeId_5_0=RULE_STRING
				{
					newLeafNode(lv_routeId_5_0, grammarAccess.getIfStatementAccess().getRouteIdSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIfStatementRule());
					}
					setWithLastConsumed(
						$current,
						"routeId",
						lv_routeId_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getIfStatementAccess().getCommaKeyword_6());
		}
		(
			(
				lv_transport_7_0=RULE_STRING
				{
					newLeafNode(lv_transport_7_0, grammarAccess.getIfStatementAccess().getTransportSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIfStatementRule());
					}
					setWithLastConsumed(
						$current,
						"transport",
						lv_transport_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_8());
		}
		otherlv_9=','
		{
			newLeafNode(otherlv_9, grammarAccess.getIfStatementAccess().getCommaKeyword_9());
		}
		otherlv_10='pattern'
		{
			newLeafNode(otherlv_10, grammarAccess.getIfStatementAccess().getPatternKeyword_10());
		}
		otherlv_11='('
		{
			newLeafNode(otherlv_11, grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_11());
		}
		(
			(
				lv_pattern_12_0=RULE_STRING
				{
					newLeafNode(lv_pattern_12_0, grammarAccess.getIfStatementAccess().getPatternSTRINGTerminalRuleCall_12_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIfStatementRule());
					}
					setWithLastConsumed(
						$current,
						"pattern",
						lv_pattern_12_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_13=')'
		{
			newLeafNode(otherlv_13, grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_13());
		}
		otherlv_14=')'
		{
			newLeafNode(otherlv_14, grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_14());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getAltstatementsStatementParserRuleCall_15_0());
				}
				lv_altstatements_15_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					add(
						$current,
						"altstatements",
						lv_altstatements_15_0,
						"org.xtext.example.mydsl.MyDsl.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_16='else'
			{
				newLeafNode(otherlv_16, grammarAccess.getIfStatementAccess().getElseKeyword_16_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStatementAccess().getElsestatementsStatementParserRuleCall_16_1_0());
					}
					lv_elsestatements_17_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStatementRule());
						}
						add(
							$current,
							"elsestatements",
							lv_elsestatements_17_0,
							"org.xtext.example.mydsl.MyDsl.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)*
		otherlv_18='end'
		{
			newLeafNode(otherlv_18, grammarAccess.getIfStatementAccess().getEndKeyword_17());
		}
	)
;

// Entry rule entryRuleLoopStatement
entryRuleLoopStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoopStatementRule()); }
	iv_ruleLoopStatement=ruleLoopStatement
	{ $current=$iv_ruleLoopStatement.current; }
	EOF;

// Rule LoopStatement
ruleLoopStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='loop'
		{
			newLeafNode(otherlv_0, grammarAccess.getLoopStatementAccess().getLoopKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getLoopStatementAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLoopStatementRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleGroupStatement
entryRuleGroupStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGroupStatementRule()); }
	iv_ruleGroupStatement=ruleGroupStatement
	{ $current=$iv_ruleGroupStatement.current; }
	EOF;

// Rule GroupStatement
ruleGroupStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='group'
		{
			newLeafNode(otherlv_0, grammarAccess.getGroupStatementAccess().getGroupKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGroupStatementAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGroupStatementRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleRefStatement
entryRuleRefStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRefStatementRule()); }
	iv_ruleRefStatement=ruleRefStatement
	{ $current=$iv_ruleRefStatement.current; }
	EOF;

// Rule RefStatement
ruleRefStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ref'
		{
			newLeafNode(otherlv_0, grammarAccess.getRefStatementAccess().getRefKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRefStatementAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRefStatementRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleParticipantStatement
entryRuleParticipantStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParticipantStatementRule()); }
	iv_ruleParticipantStatement=ruleParticipantStatement
	{ $current=$iv_ruleParticipantStatement.current; }
	EOF;

// Rule ParticipantStatement
ruleParticipantStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='participant'
			{
				newLeafNode(otherlv_0, grammarAccess.getParticipantStatementAccess().getParticipantKeyword_0_0());
			}
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getParticipantStatementAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getParticipantStatementRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getParticipantStatementAccess().getColonKeyword_0_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParticipantStatementAccess().getParticipantTypeParticipantTypeEnumRuleCall_0_3_0());
					}
					lv_participantType_3_0=ruleParticipantType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParticipantStatementRule());
						}
						set(
							$current,
							"participantType",
							lv_participantType_3_0,
							"org.xtext.example.mydsl.MyDsl.ParticipantType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getParticipantStatementAccess().getLeftParenthesisKeyword_0_4());
			}
			(
				(
					lv_description_5_0=RULE_STRING
					{
						newLeafNode(lv_description_5_0, grammarAccess.getParticipantStatementAccess().getDescriptionSTRINGTerminalRuleCall_0_5_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getParticipantStatementRule());
						}
						setWithLastConsumed(
							$current,
							"description",
							lv_description_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getParticipantStatementAccess().getRightParenthesisKeyword_0_6());
			}
		)
		    |
		(
			otherlv_7='participant'
			{
				newLeafNode(otherlv_7, grammarAccess.getParticipantStatementAccess().getParticipantKeyword_1_0());
			}
			(
				(
					lv_name_8_0=RULE_ID
					{
						newLeafNode(lv_name_8_0, grammarAccess.getParticipantStatementAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getParticipantStatementRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_8_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_9=':'
			{
				newLeafNode(otherlv_9, grammarAccess.getParticipantStatementAccess().getColonKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParticipantStatementAccess().getOutboundsOutboundEndpointDefParserRuleCall_1_3_0());
					}
					lv_outbounds_10_0=ruleOutboundEndpointDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParticipantStatementRule());
						}
						set(
							$current,
							"outbounds",
							lv_outbounds_10_0,
							"org.xtext.example.mydsl.MyDsl.OutboundEndpointDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_11='participant'
			{
				newLeafNode(otherlv_11, grammarAccess.getParticipantStatementAccess().getParticipantKeyword_2_0());
			}
			(
				(
					lv_name_12_0=RULE_ID
					{
						newLeafNode(lv_name_12_0, grammarAccess.getParticipantStatementAccess().getNameIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getParticipantStatementRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_12_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_13=':'
			{
				newLeafNode(otherlv_13, grammarAccess.getParticipantStatementAccess().getColonKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParticipantStatementAccess().getInboundsInboundEndpointDefParserRuleCall_2_3_0());
					}
					lv_inbounds_14_0=ruleInboundEndpointDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParticipantStatementRule());
						}
						set(
							$current,
							"inbounds",
							lv_inbounds_14_0,
							"org.xtext.example.mydsl.MyDsl.InboundEndpointDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleOutboundEndpointDef
entryRuleOutboundEndpointDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutboundEndpointDefRule()); }
	iv_ruleOutboundEndpointDef=ruleOutboundEndpointDef
	{ $current=$iv_ruleOutboundEndpointDef.current; }
	EOF;

// Rule OutboundEndpointDef
ruleOutboundEndpointDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='OutboundEndpoint'
		{
			newLeafNode(otherlv_0, grammarAccess.getOutboundEndpointDefAccess().getOutboundEndpointKeyword_0());
		}
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getOutboundEndpointDefAccess().getLeftParenthesisKeyword_1());
			}
		)+
		otherlv_2='protocol'
		{
			newLeafNode(otherlv_2, grammarAccess.getOutboundEndpointDefAccess().getProtocolKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getOutboundEndpointDefAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				lv_protocol_4_0=RULE_STRING
				{
					newLeafNode(lv_protocol_4_0, grammarAccess.getOutboundEndpointDefAccess().getProtocolSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOutboundEndpointDefRule());
					}
					setWithLastConsumed(
						$current,
						"protocol",
						lv_protocol_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getOutboundEndpointDefAccess().getRightParenthesisKeyword_5());
		}
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getOutboundEndpointDefAccess().getCommaKeyword_6());
		}
		otherlv_7='host'
		{
			newLeafNode(otherlv_7, grammarAccess.getOutboundEndpointDefAccess().getHostKeyword_7());
		}
		otherlv_8='('
		{
			newLeafNode(otherlv_8, grammarAccess.getOutboundEndpointDefAccess().getLeftParenthesisKeyword_8());
		}
		(
			(
				lv_host_9_0=RULE_STRING
				{
					newLeafNode(lv_host_9_0, grammarAccess.getOutboundEndpointDefAccess().getHostSTRINGTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOutboundEndpointDefRule());
					}
					setWithLastConsumed(
						$current,
						"host",
						lv_host_9_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_10=')'
		{
			newLeafNode(otherlv_10, grammarAccess.getOutboundEndpointDefAccess().getRightParenthesisKeyword_10());
		}
		otherlv_11=')'
		{
			newLeafNode(otherlv_11, grammarAccess.getOutboundEndpointDefAccess().getRightParenthesisKeyword_11());
		}
	)
;

// Entry rule entryRuleInboundEndpointDef
entryRuleInboundEndpointDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInboundEndpointDefRule()); }
	iv_ruleInboundEndpointDef=ruleInboundEndpointDef
	{ $current=$iv_ruleInboundEndpointDef.current; }
	EOF;

// Rule InboundEndpointDef
ruleInboundEndpointDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='InboundEndpoint'
		{
			newLeafNode(otherlv_0, grammarAccess.getInboundEndpointDefAccess().getInboundEndpointKeyword_0());
		}
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getInboundEndpointDefAccess().getLeftParenthesisKeyword_1());
			}
		)+
		otherlv_2='protocol'
		{
			newLeafNode(otherlv_2, grammarAccess.getInboundEndpointDefAccess().getProtocolKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getInboundEndpointDefAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				lv_protocol_4_0=RULE_STRING
				{
					newLeafNode(lv_protocol_4_0, grammarAccess.getInboundEndpointDefAccess().getProtocolSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInboundEndpointDefRule());
					}
					setWithLastConsumed(
						$current,
						"protocol",
						lv_protocol_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getInboundEndpointDefAccess().getRightParenthesisKeyword_5());
		}
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getInboundEndpointDefAccess().getCommaKeyword_6());
		}
		otherlv_7='port'
		{
			newLeafNode(otherlv_7, grammarAccess.getInboundEndpointDefAccess().getPortKeyword_7());
		}
		otherlv_8='('
		{
			newLeafNode(otherlv_8, grammarAccess.getInboundEndpointDefAccess().getLeftParenthesisKeyword_8());
		}
		(
			(
				lv_port_9_0=RULE_INT
				{
					newLeafNode(lv_port_9_0, grammarAccess.getInboundEndpointDefAccess().getPortINTTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInboundEndpointDefRule());
					}
					setWithLastConsumed(
						$current,
						"port",
						lv_port_9_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_10=')'
		{
			newLeafNode(otherlv_10, grammarAccess.getInboundEndpointDefAccess().getRightParenthesisKeyword_10());
		}
		otherlv_11=','
		{
			newLeafNode(otherlv_11, grammarAccess.getInboundEndpointDefAccess().getCommaKeyword_11());
		}
		otherlv_12='context'
		{
			newLeafNode(otherlv_12, grammarAccess.getInboundEndpointDefAccess().getContextKeyword_12());
		}
		otherlv_13='('
		{
			newLeafNode(otherlv_13, grammarAccess.getInboundEndpointDefAccess().getLeftParenthesisKeyword_13());
		}
		(
			(
				lv_context_14_0=RULE_STRING
				{
					newLeafNode(lv_context_14_0, grammarAccess.getInboundEndpointDefAccess().getContextSTRINGTerminalRuleCall_14_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInboundEndpointDefRule());
					}
					setWithLastConsumed(
						$current,
						"context",
						lv_context_14_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_15=')'
		{
			newLeafNode(otherlv_15, grammarAccess.getInboundEndpointDefAccess().getRightParenthesisKeyword_15());
		}
		otherlv_16=')'
		{
			newLeafNode(otherlv_16, grammarAccess.getInboundEndpointDefAccess().getRightParenthesisKeyword_16());
		}
	)
;

// Rule ParticipantType
ruleParticipantType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='IntegrationFlow'
			{
				$current = grammarAccess.getParticipantTypeAccess().getINTEGRATIONFLOWEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getParticipantTypeAccess().getINTEGRATIONFLOWEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='InboundEndpoint'
			{
				$current = grammarAccess.getParticipantTypeAccess().getINBOUNDENDPOINTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getParticipantTypeAccess().getINBOUNDENDPOINTEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='OutboundEndpoint'
			{
				$current = grammarAccess.getParticipantTypeAccess().getOUTBOUNDENDPOINTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getParticipantTypeAccess().getOUTBOUNDENDPOINTEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Pipeline'
			{
				$current = grammarAccess.getParticipantTypeAccess().getPIPELINEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getParticipantTypeAccess().getPIPELINEEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule MediatorType
ruleMediatorType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='log'
			{
				$current = grammarAccess.getMediatorTypeAccess().getLOGEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMediatorTypeAccess().getLOGEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='call'
			{
				$current = grammarAccess.getMediatorTypeAccess().getCALLEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMediatorTypeAccess().getCALLEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='respond'
			{
				$current = grammarAccess.getMediatorTypeAccess().getRESPONDEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getMediatorTypeAccess().getRESPONDEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='filter'
			{
				$current = grammarAccess.getMediatorTypeAccess().getFILTEREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getMediatorTypeAccess().getFILTEREnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='transform'
			{
				$current = grammarAccess.getMediatorTypeAccess().getTRANSFORMEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getMediatorTypeAccess().getTRANSFORMEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='enrich'
			{
				$current = grammarAccess.getMediatorTypeAccess().getENRICHEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getMediatorTypeAccess().getENRICHEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='external'
			{
				$current = grammarAccess.getMediatorTypeAccess().getEXTERNALEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getMediatorTypeAccess().getEXTERNALEnumLiteralDeclaration_6());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
